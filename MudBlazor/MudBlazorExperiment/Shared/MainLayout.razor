@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            <MudAppBar Color="Color.Primary" Fixed="false">
                <MudIcon Icon="@Icons.Material.Filled.ChevronLeft" Title="Prev. Week" />
                <MudSpacer />
                <MudText Typo="Typo.h6">Week # 26</MudText>
                <MudSpacer />
                <MudIcon Icon="@Icons.Material.Filled.ChevronRight" Title="Prev. Week" />
            </MudAppBar>
            <MudTabs Elevation="4" Rounded="true" AlwaysShowScrollButtons="true" Color="@Color.Info" Class="mt-4">
                <MudTabPanel Text="Monday" />
                <MudTabPanel Text="Tuesday" />
                <MudTabPanel Text="Wedneysday" />
                <MudTabPanel Text="Thursday" />
                <MudTabPanel Text="Friday" />
                <MudTabPanel Text="Saturday" />
                <MudTabPanel Text="Sunday" />
            </MudTabs>
            <MudForm>
                <MudSelect T="string" Label="Tasks" MultiSelection="true">
                    <MudSelectItem T="string">Slæbe gips</MudSelectItem>
                    <MudSelectItem T="string">Skære gips</MudSelectItem>
                    <MudSelectItem T="string">Sætte gips op</MudSelectItem>
                </MudSelect>

                @* STARTING TIME *@
                <MudItem>
                    <MudTimePicker
                        Adornment="Adornment.Start"
                        Label="Starting Time"
                        PickerVariant="PickerVariant.Dialog"
                        TimeEditMode="TimeEditMode.OnlyHours"
                        @bind-Time="startingTime">
                        <PickerActions>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.startTime, 0)">:00</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.startTime, 15)">:15</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.startTime, 30)">:30</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.startTime, 45)">:45</MudButton>
                            <MudButton Color="Color.Primary" OnClick="@(() => context.Close())">Ok</MudButton>
                        </PickerActions>
                    </MudTimePicker>

                    <MudText>@startingTime</MudText>
                </MudItem>
                @* /STARTING TIME *@

                @* ENDING TIME *@
                <MudItem>
                    <MudTimePicker
                        Adornment="Adornment.Start"
                        Label="Ending Time"
                        PickerVariant="PickerVariant.Dialog"
                        TimeEditMode="TimeEditMode.OnlyHours"
                        @bind-Time="endingTime">
                        <PickerActions>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.endingTime, 0)">:00</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.endingTime, 15)">:15</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.endingTime, 30)">:30</MudButton>
                            <MudButton Class="mud-theme-primary" @onclick="() => setPredefinedMinutes(Times.endingTime, 45)">:45</MudButton>
                            <MudButton Color="Color.Primary" OnClick="@(() => context.Close())">Ok</MudButton>
                        </PickerActions>
                    </MudTimePicker>

                    <MudText>@endingTime</MudText>

                </MudItem>
                @* /ENDING TIME *@

                <MudSpacer />
                
                <br />
                <MudDivider />
                <br />

                <MudText Typo="Typo.h6">List of tasks</MudText>

                <br />
                
                <MudTextField @bind-Value="Search" Label="Search" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary" />

                <MudDivider />
                <MudSpacer />
                <MudDivider />

                <MudTextField T="string" Label="Comments" Variant="Variant.Outlined" Text="200.- for diesel" Lines="5"></MudTextField>
            </MudForm>
        </MudContainer>
    </MudMainContent>

</MudLayout>

@code {
    public enum Times
    {
        startTime,
        endingTime
    }

    TimeSpan? startingTime = new TimeSpan(02, 35, 00);
    TimeSpan? endingTime = new TimeSpan(02, 35, 00);

    public string Search { get; set; }

    public void setPredefinedMinutes(Times whichTime, int minutes)
    {
        if (whichTime == Times.endingTime)
        {
            endingTime = TimeSpan.Parse(endingTime!.Value.Hours + ":" + minutes + ":00");
        }
        else
        {
            startingTime = TimeSpan.Parse(startingTime!.Value.Hours + ":" + minutes + ":00");
        }
        Console.WriteLine(endingTime);
    }
}